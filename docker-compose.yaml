networks:
  dmarc_network:
    driver: bridge

services:
  dmarc_analyzer:
    build:
      context: .
      dockerfile: Docker/Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - PYTHONUNBUFFERED=1
      - DEFAULT_DOMAIN=${GF_SECURITY_ADMIN_USER:-admin}
      - TZ=Asia/Tokyo
    networks:
      - dmarc_network
    tty: true
    restart: always
    volumes:
      - ./files:/app/files
      - ./reports:/app/reports
      - ./src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://elasticsearch:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    develop:
      watch:
        - action: sync
          path: ./files
          target: /app/files
          ignore:
            - "**/extracted/**"
            - "**/extracted"
            - "**/*.tmp"
            - "**/*.processing"
            - "**/*.lock"
        - action: sync+restart
          path: ./src
          target: /app/src

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.14
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - dmarc_network
    restart: always

  grafana:
    image: grafana/grafana
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - '3000:3000'
    networks:
      - dmarc_network
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/dmarc_summary_dashboard.json
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=5s
      - GF_DASHBOARDS_VERSIONS_TO_KEEP=20
      - GF_DASHBOARDS_AUTO_SAVE_DELAY_SECONDS=30
    restart: always
    command: >
      sh -c "
        /run.sh &
        echo '\n=== Grafanaの準備ができました ===';
        echo '📊 アクセス URL: http://localhost:3000';
        echo 'ユーザー名: admin';
        echo 'パスワード: admin\n';
        tail -f /dev/null
      "

volumes:
  es_data:
  grafana_data: